datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id     String @id @default(uuid())
  userID String @unique
  name   String
  imgURL String @db.Text
  email  String @db.Text

  servers  Server[]
  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Member    Member[]
  // Channel   Channel[]
}

model Server {
  id         String @id @default(uuid())
  name       String
  imgURL     String @db.Text
  inviteCode String @db.Text

  members  Member[]
  channels Channel[]

  profileID String
  profile   Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Member    Member[]
  // Channel   Channel[]

  @@index([profileID], name: "profileID")
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  profileID String
  profile   Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)

  serverID String
  server   Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID], name: "profileID")
  @@index([serverID], name: "serverID")
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileID String
  profile   Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)

  serverID String
  server   Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID], name: "profileID")
  @@index([serverID], name: "serverID")
}
